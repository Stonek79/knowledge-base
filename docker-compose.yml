name: knowledge-base

services:
    postgres:
        build:
            context: ./docker/postgres
            dockerfile: Dockerfile
        container_name: kb-postgres
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-knowledge_base}
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - '5435:5432'
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-knowledge_base}',
                ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        networks:
            - kb-network

    redis:
        image: redis:7-alpine
        container_name: kb-redis
        command: redis-server --requirepass ${REDIS_PASSWORD:-kb_redis_password} --maxmemory 256mb --maxmemory-policy allkeys-lru --appendonly yes
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        healthcheck:
            test:
                [
                    'CMD',
                    'redis-cli',
                    '-a',
                    '${REDIS_PASSWORD:-kb_redis_password}',
                    'ping',
                ]
            interval: 10s
            timeout: 3s
            retries: 5
            start_period: 30s
        networks:
            - kb-network

    minio:
        image: minio/minio:latest
        container_name: kb-minio
        restart: unless-stopped
        environment:
            MINIO_ROOT_USER: ${MINIO_ROOT_USER:-kb_admin}
            MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-kb_minio_password}
        command: server /data --console-address ":9001"
        ports:
            - '9000:9000'
            - '9001:9001'
        volumes:
            - minio_data:/data
        healthcheck:
            test:
                ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
            interval: 30s
            timeout: 20s
            retries: 3
        networks:
            - kb-network

    gotenberg:
        image: gotenberg/gotenberg:8
        container_name: kb-gotenberg
        restart: unless-stopped
        environment:
            GOTENBERG_API_PORT: 3000
            GOTENBERG_LOG_LEVEL: info
        ports:
            - '3001:3000'
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
            interval: 30s
            timeout: 10s
            retries: 3
        networks:
            - kb-network

volumes:
    postgres_data:
    redis_data:
    minio_data:
    gotenberg_data:

networks:
    kb-network:
        driver: bridge
