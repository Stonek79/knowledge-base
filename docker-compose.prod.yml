version: '3.8'

services:
    postgres:
        ports: [] # Нет внешнего доступа
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-knowledge_base}
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data # Постоянные данные
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-knowledge_base}',
                ]
            interval: 30s
            timeout: 5s
            retries: 3

    minio:
        ports: [] # Нет внешнего доступа
        environment:
            MINIO_ROOT_USER: ${MINIO_ROOT_USER}
            MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
            MINIO_BROWSER: 'on'
        command: server /data --console-address ":9001"
        volumes:
            - minio_data:/data
        healthcheck:
            test:
                ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']

    redis:
        ports: [] # Нет внешнего доступа
        command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru --appendonly yes
        volumes:
            - redis_data:/data
        healthcheck:
            test: ['CMD', 'redis-cli', '-a', '${REDIS_PASSWORD}', 'ping']

    gotenberg:
        ports: [] # Нет внешнего доступа
        environment:
            GOTENBERG_API_PORT: 3000
            GOTENBERG_LOG_LEVEL: warn
        volumes:
            - gotenberg_data:/tmp
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']

    app:
        ports: [] # Нет внешнего доступа
        environment:
            DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-knowledge_base}
            NODE_ENV: production
            POSTGRES_DB: ${POSTGRES_DB:-knowledge_base}
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            MINIO_ROOT_USER: ${MINIO_ROOT_USER}
            MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
            REDIS_PASSWORD: ${REDIS_PASSWORD}
            MINIO_BUCKET: ${MINIO_BUCKET}
            GOTENBERG_API_PORT: ${GOTENBERG_API_PORT:-3000}
            GOTENBERG_TIMEOUT: ${GOTENBERG_TIMEOUT:-60000}
            SEARCH_ENGINE: ${SEARCH_ENGINE:-flexsearch}
            FLEXSEARCH_RESOLUTION: ${FLEXSEARCH_RESOLUTION:-9}
            FLEXSEARCH_TOKENIZE: ${FLEXSEARCH_TOKENIZE:-full}
            FLEXSEARCH_CACHE: ${FLEXSEARCH_CACHE:-true}
        restart: unless-stopped
        depends_on:
            postgres:
                condition: service_healthy
            minio:
                condition: service_healthy
            redis:
                condition: service_healthy
            gotenberg:
                condition: service_healthy

volumes:
    postgres_data:
        driver: local
    minio_data:
        driver: local
    redis_data:
        driver: local
    gotenberg_data:
        driver: local

networks:
    default:
        name: kb-network
